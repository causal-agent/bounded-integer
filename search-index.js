var searchIndex = {};
searchIndex["bounded_integer_meta"] = {"doc":"","items":[],"paths":[]};
searchIndex["bounded_integer_plugin"] = {"doc":"Provides the procedural macro `bounded_integer!` for generating enums for the\n[`bounded-integer`][main] crate.","items":[[3,"IntegerEnum","bounded_integer_plugin","Parsed bounded integer enum.",null,null],[12,"attrs","","Attributes.",0,null],[12,"is_pub","","Visibility.",0,null],[12,"name","","Name.",0,null],[12,"repr","","Representation.",0,null],[12,"min","","Minimum value.",0,null],[12,"max","","Maximum value.",0,null],[3,"IntLit","","Signed integer literal.",null,null],[12,"neg","","Negative.",1,null],[12,"int","","Integer.",1,null],[5,"plugin_registrar","","Registers the `bounded_integer!` macro.",null,{"inputs":[{"name":"registry"}],"output":null}],[5,"expand_bounded_integer","","Expands the `bounded_integer!` macro.",null,null],[11,"fmt","","",0,null],[11,"parse_tts","","Parses a slice of token trees.",0,null],[11,"into_items","","Creates an enum item and a `bounded_integer_impls` macro invocation item.",0,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"from_expr","","Extracts an integer literal from an expression.",1,{"inputs":[{"name":"expr"}],"output":{"name":"result"}}],[11,"into_expr","","Creates an integer literal expression.",1,null],[11,"into_ident","","Creates an ident for an integer literal of the form `...N1, Z0, P1...`.",1,null],[11,"succ","","Returns the successive integer literal.",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null]],"paths":[[3,"IntegerEnum"],[3,"IntLit"]]};
searchIndex["bounded_integer"] = {"doc":"Provides *bounded integers*, integer types which are restricted to a range of values. These\ntypes are created by implementing the [`BoundedInteger`](trait.BoundedInteger.html) trait for\nC-like enums.","items":[[8,"Repr","bounded_integer","Integer representation.",null,null],[10,"is_negative","","Returns true if negative.",0,null],[10,"checked_add","","Checked integer addition.",0,null],[10,"checked_sub","","Checked integer subtraction.",0,null],[10,"checked_mul","","Checked integer multiplication.",0,null],[10,"checked_div","","Checked integer division.",0,null],[10,"checked_rem","","Checked integer remainder.",0,null],[10,"checked_neg","","Checked integer negation.",0,null],[8,"BoundedInteger","","Bounded integers.",null,null],[16,"Repr","","Integer representation.",1,null],[10,"from_repr","","Converts from `Self::Repr` to `Self`.",1,{"inputs":[{"name":"repr"}],"output":{"name":"option"}}],[10,"to_repr","","Converts from `Self` to `Self::Repr`.",1,null],[10,"min_value","","Returns the smallest value that can be represented as `Self`.",1,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest value that can be represented as `Self`.",1,{"inputs":[],"output":{"name":"self"}}],[11,"checked_add","","Checked integer addition.",1,null],[11,"checked_sub","","Checked integer subtraction.",1,null],[11,"checked_mul","","Checked integer multiplication.",1,null],[11,"checked_div","","Checked integer division.",1,null],[11,"checked_rem","","Checked integer remainder.",1,null],[11,"checked_neg","","Checked integer negation.",1,null],[11,"checked_add_repr","","Checked integer addition with `Self::Repr`.",1,null],[11,"checked_sub_repr","","Checked integer subtraction with `Self::Repr`.",1,null],[11,"checked_mul_repr","","Checked integer multiplication with `Self::Repr`.",1,null],[11,"checked_div_repr","","Checked integer division with `Self::Repr`.",1,null],[11,"checked_rem_repr","","Checked integer remainder with `Self::Repr`.",1,null],[11,"saturating_add","","Saturating integer addition.",1,null],[11,"saturating_sub","","Saturating integer subtraction.",1,null],[11,"saturating_mul","","Saturating integer multiplication.",1,null],[11,"saturating_add_repr","","Saturating integer addition with `Self::Repr`.",1,null],[11,"saturating_sub_repr","","Saturating integer subtraction with `Self::Repr`.",1,null],[11,"saturating_mul_repr","","Saturating integer multiplication with `Self::Repr`.",1,null],[14,"bounded_integer_impl!","","Implements [`BoundedInteger`](trait.BoundedInteger.html) for a C-like enum with contiguous\nvariants.",null,null],[14,"bounded_integer_into_repr_impl!","","Implements `Into&lt;Self::Repr&gt;` for a [`BoundedInteger`](trait.BoundedInteger.html).",null,null],[14,"bounded_integer_impls!","","Implements all bounded integer traits for a C-like enum with contiguous variants.",null,null],[14,"bounded_integer_add_self_impls!","","Implements `std::ops::Add&lt;Self&gt;` for a [`BoundedInteger`](trait.BoundedInteger.html).",null,null],[14,"bounded_integer_add_repr_impls!","","Implements `std::ops::Add&lt;Self::Repr&gt;` for a [`BoundedInteger`](trait.BoundedInteger.html).",null,null],[14,"bounded_integer_sub_self_impls!","","Implements `std::ops::Sub&lt;Self&gt;` for a [`BoundedInteger`](trait.BoundedInteger.html).",null,null],[14,"bounded_integer_sub_repr_impls!","","Implements `std::ops::Sub&lt;Self::Repr&gt;` for a [`BoundedInteger`](trait.BoundedInteger.html).",null,null],[14,"bounded_integer_mul_self_impls!","","Implements `std::ops::Mul&lt;Self&gt;` for a [`BoundedInteger`](trait.BoundedInteger.html).",null,null],[14,"bounded_integer_mul_repr_impls!","","Implements `std::ops::Mul&lt;Self::Repr&gt;` for a [`BoundedInteger`](trait.BoundedInteger.html).",null,null],[14,"bounded_integer_div_self_impls!","","Implements `std::ops::Div&lt;Self&gt;` for a [`BoundedInteger`](trait.BoundedInteger.html).",null,null],[14,"bounded_integer_div_repr_impls!","","Implements `std::ops::Div&lt;Self::Repr&gt;` for a [`BoundedInteger`](trait.BoundedInteger.html).",null,null],[14,"bounded_integer_rem_self_impls!","","Implements `std::ops::Rem&lt;Self&gt;` for a [`BoundedInteger`](trait.BoundedInteger.html).",null,null],[14,"bounded_integer_rem_repr_impls!","","Implements `std::ops::Rem&lt;Self::Repr&gt;` for a [`BoundedInteger`](trait.BoundedInteger.html).",null,null],[14,"bounded_integer_neg_impls!","","Implements `std::ops::Neg` for a [`BoundedInteger`](trait.BoundedInteger.html).",null,null]],"paths":[[8,"Repr"],[8,"BoundedInteger"]]};
initSearch(searchIndex);
